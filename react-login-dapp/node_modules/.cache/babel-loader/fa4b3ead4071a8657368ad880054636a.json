{"ast":null,"code":"import _regeneratorRuntime from \"/home/manuel/Documents/DAS-1/react-login-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(interactSaga);\n\nimport { put, call } from 'redux-saga/effects';\nimport { interactService } from '../services/interactService';\nimport * as types from '../actions';\nexport function interactSaga(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function interactSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(interactService, payload);\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return [put({\n            type: types.CONTRACT_INTERACTION_SUCCESS,\n            response: response\n          })];\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: types.CONTRACT_INTERACTION_ERROR,\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/home/manuel/Documents/DAS-1/react-login-dapp/src/sagas/interactSaga.js"],"names":["interactSaga","put","call","interactService","types","payload","response","type","CONTRACT_INTERACTION_SUCCESS","CONTRACT_INTERACTION_ERROR","error"],"mappings":";;;;yBAKiBA,Y;;AALjB,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AAEA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;AAEA,OAAO,SAAUJ,YAAV,CAAuBK,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMH,IAAI,CAACC,eAAD,EAAkBE,OAAlB,CAAV;;AAFd;AAEGC,UAAAA,QAFH;AAAA;AAGH,iBAAM,CACJL,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEH,KAAK,CAACI,4BAAd;AAA4CF,YAAAA,QAAQ,EAARA;AAA5C,WAAD,CADC,CAAN;;AAHG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOH,iBAAML,GAAG,CAAC;AAAEM,YAAAA,IAAI,EAAEH,KAAK,CAACK,0BAAd;AAA0CC,YAAAA,KAAK;AAA/C,WAAD,CAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put, call } from 'redux-saga/effects';\nimport { interactService } from '../services/interactService';\n\nimport * as types from '../actions'\n\nexport function* interactSaga(payload) {\n  try {\n    const response = yield call(interactService, payload);\n    yield [\n      put({ type: types.CONTRACT_INTERACTION_SUCCESS, response })\n    ];\n  } catch(error) {\n    yield put({ type: types.CONTRACT_INTERACTION_ERROR, error });\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}