{"ast":null,"code":"import _classCallCheck from \"/home/manuel/Documents/DAS-1/react-login-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manuel/Documents/DAS-1/react-login-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/manuel/Documents/DAS-1/react-login-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/manuel/Documents/DAS-1/react-login-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/manuel/Documents/DAS-1/react-login-dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/manuel/Documents/DAS-1/react-login-dapp/src/components/loginPage.js\";\nimport React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUserAction } from '../actions/authenticationActions';\nimport { setCookie } from '../utils/cookies';\n\nvar xss = require(\"xss\");\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onHandleLogin = function (event) {\n      event.preventDefault();\n      var email = xss(event.target.email.value);\n      var password = xss(event.target.password.value);\n      var data = {\n        email: email,\n        password: password\n      };\n\n      _this.props.dispatch(loginUserAction(data));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.title = 'Login';\n      var ele = document.querySelector(\"input[name=password]\");\n      attachHandler(ele, \"invalid\", function () {\n        this.setCustomValidity(\"Please enter at least 5 characters.\");\n        this.setCustomValidity(\"\");\n      });\n\n      function attachHandler(el, evtname, fn) {\n        if (el.addEventListener) {\n          el.addEventListener(evtname, fn.bind(el), false);\n        } else if (el.attachEvent) {\n          el.attachEvent('on' + evtname, fn.bind(el));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isSuccess, message;\n\n      if (this.props.response.login.hasOwnProperty('response')) {\n        isSuccess = this.props.response.login.response.success;\n        message = this.props.response.login.response.message;\n\n        if (isSuccess) {\n          setCookie('token', this.props.response.login.response.token, 1);\n        }\n      }\n\n      return React.createElement(\"div\", {\n        class: \"container-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"wrap-login100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, !isSuccess ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, message) : React.createElement(Redirect, {\n        to: \"dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        class: \"login100-form validate-form\",\n        onSubmit: this.onHandleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"login100-form-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"zmdi zmdi-landscape\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        class: \"login100-form-title p-b-34 p-t-27\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Inicio de sesi\\xF3n\"), React.createElement(\"div\", {\n        class: \"wrap-input100 validate-input\",\n        \"data-validate\": \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        class: \"input100\",\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        class: \"focus-input100\",\n        \"data-placeholder\": \"\\uF207\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"wrap-input100 validate-input\",\n        \"data-validate\": \"Contrase\\xF1a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        class: \"input100\",\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        minLength: \"8\",\n        pattern: \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\",\n        title: \"Please enter 8 characters at least, including minor and upper case, number and special character at least\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        class: \"focus-input100\",\n        \"data-placeholder\": \"\\uF191\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"container-login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        class: \"login100-form-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Enviar\"))), \"A\\xFAn no tienes una cuenta? \", React.createElement(Link, {\n        to: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Registrate aqu\\xED\")));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(response) {\n  return {\n    response: response\n  };\n};\n\nexport default connect(mapStateToProps)(LoginPage);","map":{"version":3,"sources":["/home/manuel/Documents/DAS-1/react-login-dapp/src/components/loginPage.js"],"names":["React","Component","Link","Redirect","connect","loginUserAction","setCookie","xss","require","LoginPage","onHandleLogin","event","preventDefault","email","target","value","password","data","props","dispatch","document","title","ele","querySelector","attachHandler","setCustomValidity","el","evtname","fn","addEventListener","bind","attachEvent","isSuccess","message","response","login","hasOwnProperty","success","token","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { loginUserAction } from '../actions/authenticationActions';\nimport { setCookie } from '../utils/cookies';\nconst xss = require(\"xss\");\n\nclass LoginPage extends Component {\n  onHandleLogin = (event) => {\n    event.preventDefault();\n\n    let email = xss(event.target.email.value);\n    let password = xss(event.target.password.value);\n\n    const data = {\n      email, password\n    };\n\n    this.props.dispatch(loginUserAction(data));\n  }\n\n  \n  componentDidMount() {\n    document.title = 'Login';\n    var ele = document.querySelector(\"input[name=password]\");\n     attachHandler(ele, \"invalid\", function () {\n        this.setCustomValidity(\"Please enter at least 5 characters.\");\n        this.setCustomValidity(\"\");\n    });\n\n    function attachHandler(el, evtname, fn) {\n      if (el.addEventListener) {\n          el.addEventListener(evtname, fn.bind(el), false);\n      } else if (el.attachEvent) {\n          el.attachEvent('on' + evtname, fn.bind(el));\n      }\n    }\n  }\n\n  render() {\n    let isSuccess, message;\n\n    if (this.props.response.login.hasOwnProperty('response')) {\n      isSuccess = this.props.response.login.response.success;\n      message = this.props.response.login.response.message;\n      \n      if (isSuccess) {\n        setCookie('token', this.props.response.login.response.token, 1);\n      }\n    }\n\n    return (\n      <div class=\"container-login100\">\n      <div class=\"wrap-login100\">\n        {!isSuccess ? <div>{message}</div> : <Redirect to='dashboard' />}\n        <form class=\"login100-form validate-form\" onSubmit={this.onHandleLogin}>\n          <span class=\"login100-form-logo\">\n            <i class=\"zmdi zmdi-landscape\"></i>\n          </span>\n          <span class=\"login100-form-title p-b-34 p-t-27\">Inicio de sesión</span>\n          <div class=\"wrap-input100 validate-input\" data-validate=\"Email\">\n            <input class=\"input100\" type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n            <span class=\"focus-input100\" data-placeholder=\"&#xf207;\"></span>\n          </div>\n          <div class=\"wrap-input100 validate-input\" data-validate=\"Contraseña\">\n            <input class=\"input100\" type=\"password\" name=\"password\" id=\"password\" placeholder=\"Contraseña\"\n            minLength='8' pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\" \n            title=\"Please enter 8 characters at least, including minor and upper case, number and special character at least\"/>\n            <span class=\"focus-input100\" data-placeholder=\"&#xf191;\"></span>\n          </div>\n          <div class=\"container-login100-form-btn\">\n            <button class=\"login100-form-btn\">Enviar</button>\n          </div>\n        </form>\n        Aún no tienes una cuenta? <Link to='register'>Registrate aquí</Link>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (response) => ({response});\n\nexport default connect(mapStateToProps)(LoginPage);"]},"metadata":{},"sourceType":"module"}